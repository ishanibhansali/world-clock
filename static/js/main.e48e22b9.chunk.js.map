{"version":3,"sources":["pages/worldclock/worldclock.jsx","pages/navbar/navbar.jsx","pages/stopwatch/stopwatch.jsx","pages/timer/timer.jsx","App.js","serviceWorker.js","index.js"],"names":["cityTimezones","require","WeatherApp","state","currentTime","moment","cities","window","setInterval","setState","name","timezone","this","Object","assign","inputVal","document","getElementById","value","indexOf","str1","substring","str2","length","trim","replace","toUpperCase","cityLookup","lookupViaCity","inputTimezone","i","country","iso2","iso3","myFunction","alert","className","style","position","keys","map","cityName","timeZone","key","bottom","right","type","placeholder","id","width","onClick","getInputValue","React","Component","City","props","weatherData","localTime","tz","format","currentHour","open","bgGradient","getWeatherInfo","bind","updateCurrentTime","toggleOpen","fetch","then","res","json","weatherInfo","temp","main","desc","weather","icon","setGradient","currentState","bgImg","activeClass","gradientClass","NavBar","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","DisplayComponent","time","h","m","s","ms","BtnComponent","status","start","stop","reset","resume","Stopwatch","useState","setTime","interv","setInterv","setStatus","run","updatedMs","updatedS","updatedM","updatedH","clearInterval","Label","styled","form","LabelText","label","LabelInput","input","OutputLabel","handleTimerLabelInput","onSubmit","OutputDisplay","total","timeTotal","isLabel","handleTimerLabel","timeValues","entries","Text","entry","index","x","y","fill","alignmentBaseline","textAnchor","fontWeight","fontSize","progress","transform","Fragment","viewBox","d","stroke","strokeWidth","shapeRendering","strokeDasharray","strokeDashoffset","r","cx","cy","TimerButton","button","OutputContainer","div","OutputControls","TimerOutput","isPlaying","handleTimerToggle","handleTimerNew","handleTimerAdd","handleTimerReset","from","opacity","height","Input","isInput","InputTime","h2","InputSpan","span","suffix","InputButton","InputDisplay","handleDialBack","InputSpans","pair","formatTime","Dial","Digit","InputDial","handleDial","Digits","push","InputContainer","TimerInput","handleTimerStart","Timer","isTimer","inputTime","padStart","parseInt","e","textContent","target","updateTime","intervalID","startTimer","preventDefault","querySelector","App","modalState","handleShow","tabindex","role","aria-labelledby","aria-hidden","class","data-dismiss","src","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"4dAKIA,G,YAAgBC,EAAQ,KAEPC,E,kDACjB,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,YAAaC,MACbC,OAAQ,IAJE,E,gEAOO,IAAD,OAClBC,OAAOC,aAAY,kBAAM,EAAKC,SAAS,CAAEL,YAAaC,UAAa,O,iCAEzDK,EAAKC,GACbC,KAAKH,SAAS,CAACH,OAAQO,OAAOC,OAAOF,KAAKT,MAAMG,OAAzBO,OAAA,IAAAA,CAAA,GAAmCH,EAAOC,Q,sCAKnE,IAAII,EAAWC,SAASC,eAAe,WAAWC,MAClD,IAA+B,IAA3BH,EAASI,QAAQ,KAArB,CAIA,IAAIC,EAAOL,EAASM,UAAU,EAAGN,EAASI,QAAQ,MAC9CG,EAAOP,EAASM,UAAUN,EAASI,QAAQ,KAAK,EAAGJ,EAASQ,QAChEH,EAAOA,EAAKI,OAEZF,GADAA,EAAOA,EAAKG,QAAQ,MAAM,KACdC,cACZ,IAAMC,EAAa3B,EAAc4B,cAAcR,GAC/C,GAA2B,IAAvBO,EAAWJ,OAAf,CAKA,IADA,IAAIM,EACKC,EAAI,EAAGA,EAAIH,EAAWJ,OAAQO,IAAK,CAC1C,IAAIC,EAAUJ,EAAWG,GAAGC,QAE5BA,GADAA,EAAUA,EAAQN,QAAQ,MAAM,KACdC,cACdC,EAAWG,GAAGE,OAASV,GAAQK,EAAWG,GAAGG,OAASX,GAAQS,IAAYT,IAC5EO,EAAgBF,EAAWG,GAAGnB,UAG7BkB,EAILjB,KAAKsB,WAAWd,EAAKS,GAHnBM,MAAM,2DAbNA,MAAM,mCAVNA,MAAM,qG,+BA6BA,IAAD,SACyBvB,KAAKT,MAA7BG,EADD,EACCA,OAAQF,EADT,EACSA,YAChB,OACE,6BACA,yBAAKgC,UAAU,SAASC,MAAO,CAACC,SAAU,aAEtCzB,OACG0B,KAAKjC,GACLkC,KAAI,SAAAC,GAAQ,OACR,kBAAC,EAAD,CAAM/B,KAAO+B,EACPC,SAAYpC,EAAOmC,GACnBrC,YAAeA,EACfuC,IAAKF,QAItB,yBAAKL,UAAU,mCAAmCC,MAAO,CAACC,SAAU,WAAYM,OAAQ,GAAIC,MAAM,KAClG,2BAAOT,UAAU,uBAAuBU,KAAK,OAAOC,YAAY,6CAA6CC,GAAG,UAAUX,MAAO,CAACY,MAAO,OACzI,4BAAQb,UAAU,2DAA2DU,KAAK,SAASI,QAAS,kBAAM,EAAKC,kBAA/G,kB,GAlEgCC,IAAMC,WA0EtCC,E,kDACJ,WAAYC,GAAQ,IAAD,6BACjB,cAAMA,IACiCA,MAA/Bb,EAFS,EAETA,SAAUtC,EAFD,EAECA,YAFD,OAGjB,EAAKD,MAAQ,CACLqD,YAAa,GACbC,UAAWrD,EAAYsD,GAAGhB,GAAUiB,OAAO,cAC3CC,YAAaxD,EAAYsD,GAAGhB,GAAUiB,OAAO,MAC7CE,MAAM,EACNC,WAAY,IAEpB,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBACzB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAZD,E,oGAcEhB,G,yFACDmB,MAAM,qDAAD,OAAsDnB,EAAtD,yDAAgHoB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,U,OAAjJD,E,OACAE,EAAc,CAClBC,KAAMH,EAAII,KAAKD,KACfE,KAAML,EAAIM,QAAQ,GAAGF,KACrBG,KAAK,QAAD,OAAUP,EAAIM,QAAQ,GAAGC,OAE/BhE,KAAKH,SAAS,CACZ+C,YAAae,I,yIAGLX,GACJA,EAAc,EAChBhD,KAAKH,SAAS,CAAEqD,WAAa,YACpBF,EAAc,EACvBhD,KAAKH,SAAS,CAAEqD,WAAa,SACpBF,EAAc,EACvBhD,KAAKH,SAAS,CAAEqD,WAAa,YACpBF,EAAc,GACvBhD,KAAKH,SAAS,CAAEqD,WAAa,gBACpBF,EAAc,GACvBhD,KAAKH,SAAS,CAAEqD,WAAa,gBACpBF,EAAc,GACvBhD,KAAKH,SAAS,CAAEqD,WAAa,cACpBF,EAAc,GACvBhD,KAAKH,SAAS,CAAEqD,WAAa,cACpBF,EAAc,IACvBhD,KAAKH,SAAS,CAAEqD,WAAa,c,0CAGd,IAAD,EACgBlD,KAAK2C,MAA/Bb,EADU,EACVA,SAAUtC,EADA,EACAA,YAClBQ,KAAKH,SAAS,CAAEgD,UAAWrD,EAAYsD,GAAGhB,GAAUiB,OAAO,gBAC3D/C,KAAKiE,YAAYjE,KAAKT,MAAMyD,e,0CAET,IAAD,OACVlD,EAASE,KAAK2C,MAAd7C,KACRE,KAAKmD,eAAerD,GACpBH,OAAOC,aAAY,kBAAM,EAAKyD,sBAAqB,KACnDrD,KAAKiE,YAAYjE,KAAKT,MAAMyD,e,mCAG5B,IAAMkB,EAAelE,KAAKT,MAAM0D,KAChCjD,KAAKH,SAAS,CAAEoD,MAAOiB,M,+BAEf,IAAD,EACiBlE,KAAK2C,MAArB7C,EADD,EACCA,KACA+C,GAFD,EACOsB,MACQnE,KAAKT,MAAnBsD,WAFD,EAGsB7C,KAAKT,MAAMqD,YAAhCkB,EAHD,EAGCA,KAAMF,EAHP,EAGOA,KAAMI,EAHb,EAGaA,KACdI,EAAcpE,KAAKT,MAAM0D,KAAO,OAAQ,GACxCoB,EAAgBrE,KAAKT,MAAM2D,WACjC,OACE,yBAAK1B,UAAS,gBAAW4C,EAAX,YAA0BC,GACnC/B,QAAStC,KAAKsD,YAEjB,6BACE,4BAAMxD,GACN,2BAAK+C,IAEL,yBAAKrB,UAAU,gBACb,uBAAGA,UAAWwC,IACjBJ,EACG,kCAASE,EAAT,IAAkBF,EAAlB,UACE,S,GA9EKpB,IAAMC,W,OC9BZ6B,MAhDf,WACI,OAEE,yBAAK9C,UAAU,kEAGb,yBAAKA,UAAU,aAGX,kBAAC,IAAD,CAAM+C,GAAG,IAAI/C,UAAU,gBACnB,gDAIJ,4BAAQA,UAAU,iBAAiBU,KAAK,SAASsC,cAAY,WAAWC,cAAY,0BAChFC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBACxE,0BAAMpD,UAAU,yBAIpB,yBAAKA,UAAU,2BAA2BY,GAAG,0BAGzC,wBAAIZ,UAAU,sBACd,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAM+C,GAAG,IAAI/C,UAAU,YAAvB,SAGJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAM+C,GAAG,aAAa/C,UAAU,YAAhC,cAEJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAM+C,GAAG,SAAS/C,UAAU,YAA5B,e,cCwBpB,SAASqD,EAAiBlC,GAQtB,OACE,6BAPqB,IAAjBA,EAAMmC,KAAKC,EACL,GAEA,8BAAQpC,EAAMmC,KAAKC,GAAK,GAAKpC,EAAMmC,KAAKC,EAAI,IAAKpC,EAAMmC,KAAKC,GAItE,WAEG,8BAAQpC,EAAMmC,KAAKE,GAAK,GAAKrC,EAAMmC,KAAKE,EAAI,IAAKrC,EAAMmC,KAAKE,GAF/D,YAGG,8BAAQrC,EAAMmC,KAAKG,GAAK,GAAKtC,EAAMmC,KAAKG,EAAI,IAAKtC,EAAMmC,KAAKG,GAH/D,YAIG,8BAAQtC,EAAMmC,KAAKI,IAAM,GAAKvC,EAAMmC,KAAKI,GAAK,IAAKvC,EAAMmC,KAAKI,KAKrE,SAASC,EAAaxC,GACpB,OACE,6BACqB,IAAjBA,EAAMyC,OACN,4BAAQ5D,UAAU,2DAClBC,MAAO,CAACY,MAAM,KACdC,QAASK,EAAM0C,OAFf,SAEuC,GAGtB,IAAjB1C,EAAMyC,OACN,6BACE,4BAAQ5D,UAAU,2DACVC,MAAO,CAACY,MAAM,KACdC,QAASK,EAAM2C,MAFvB,QAGA,4BAAQ9D,UAAU,2DACVC,MAAO,CAACY,MAAM,KACdC,QAASK,EAAM4C,OAFvB,UAGO,GAGO,IAAjB5C,EAAMyC,OACL,6BACE,4BAAQ5D,UAAU,2DACVC,MAAO,CAACY,MAAM,KACdC,QAASK,EAAM6C,QAFvB,UAGA,4BAAQhE,UAAU,2DACVC,MAAO,CAACY,MAAM,KACdC,QAASK,EAAM4C,OAFvB,UAGO,IAOJE,MA7Gf,WAAsB,IAAD,EACKC,mBAAS,CAACR,GAAG,EAAGD,EAAE,EAAGD,EAAE,EAAGD,EAAE,IADjC,mBACZD,EADY,KACNa,EADM,OAESD,qBAFT,mBAEZE,EAFY,KAEJC,EAFI,OAGSH,mBAAS,GAHlB,mBAGZN,EAHY,KAGJU,EAHI,KAKbT,EAAQ,WACZU,IACAD,EAAU,GACVD,EAAUjG,YAAYmG,EAAK,MAGzBC,EAAYlB,EAAKI,GAAIe,EAAWnB,EAAKG,EAAGiB,EAAWpB,EAAKE,EAAGmB,EAAWrB,EAAKC,EAEzEgB,EAAM,WAcV,OAbgB,KAAbG,IACDC,IACAD,EAAW,GAEG,KAAbD,IACDC,IACAD,EAAW,GAEI,MAAdD,IACDC,IACAD,EAAY,GAEdA,IACOL,EAAQ,CAACT,GAAGc,EAAU,EAAGf,EAAEgB,EAAUjB,EAAEkB,EAAUnB,EAAEoB,KAiB5D,OACE,yBAAK3E,UAAU,gBACd,yBAAKA,UAAU,gBACV,yBAAKA,UAAU,aACV,kBAACqD,EAAD,CAAkBC,KAAMA,IACxB,kBAACK,EAAD,CAAcC,OAAQA,EAAQI,OAR5B,kBAAMH,KAQsCE,MAd7C,WACZa,cAAcR,GACdE,EAAU,GACVH,EAAQ,CAACT,GAAG,EAAGD,EAAE,EAAGD,EAAE,EAAGD,EAAE,KAW4CO,KAnB5D,WACXc,cAAcR,GACdE,EAAU,IAiByET,MAAOA,Q,g4HC7C9F,IAAMgB,EAAQC,IAAOC,KAAV,KAcLC,EAAYF,IAAOG,MAAV,KAMTC,EAAaJ,IAAOK,MAAV,KAYVC,EAAc,SAAC,GAAsC,IAApCH,EAAmC,EAAnCA,MAAOI,EAA4B,EAA5BA,sBAC5B,OACE,kBAACR,EAAD,CACES,SAAUD,GACV,kBAACL,EAAD,sBACA,kBAACE,EAAD,CACExE,KAAK,OACLC,YAAasE,MAMfM,EAAgB,SAAC,GAIrB,IAJwG,IAAjFC,EAAgF,EAAhFA,MAAOC,EAAyE,EAAzEA,UAAWR,EAA8D,EAA9DA,MAAOS,EAAuD,EAAvDA,QAASC,EAA8C,EAA9CA,iBAAkBN,EAA4B,EAA5BA,sBACvE5B,EAAIgC,EACJjC,EAAI,EACJD,EAAI,EACDE,GAAK,IACVA,GAAK,GACLD,GAAK,EAGP,KAAOA,GAAK,IACVA,GAAK,GACLD,GAAK,EAEP,IAAMD,EAAO,GACTkC,GAAS,OACXlC,EAAKC,EAAIA,GAEPiC,GAAS,KACXlC,EAAKE,EAAIA,GAGXF,EAAKG,EAAIA,EAET,IAAMmC,EAAanH,OAAOoH,QAAQvC,GAC5BwC,EAAOF,EAAWxF,KAAI,SAAC2F,EAAOC,GAClC,IAAM9F,EAAW,IAAM0F,EAAWzG,OAAS,IAAM6G,EAAQ,GACzD,OACE,0BACEC,EAAG/F,EACHgG,EAAE,KACFC,KAAK,UACLC,kBAAkB,SAClBC,WAAW,SACX9F,IAAKwF,EAAM,GACXO,WAAW,OACXC,SAAS,QAERR,EAAM,GACP,2BACEQ,SAAS,UACTH,kBAAkB,WAEjBL,EAAM,QAQTS,EAAY,EAAIf,EAAYD,EAC5BiB,EAAS,kBAAyB,IAAXD,EAAd,qCAAoE,IAAXA,EAAzD,KAGf,OACE,kBAAC,IAAME,SAAP,KAEIhB,GACA,kBAAC,EAAD,CACET,MAAOA,EACPI,sBAAuBA,IAG3B,yBAAKsB,QAAQ,cAAc9F,MAAM,OAC/B,uBAAG4F,UAAU,kBACX,0BACEG,EAAE,gDACFC,OAAO,OACPC,YAAY,IACZX,KAAK,OACLY,eAAe,uBAGjB,0BACEH,EAAE,gDACFC,OAAO,UACPC,YAAY,IACZE,gBA5BQ,OA6BRC,iBA7BQ,cA6BmCT,EAC3CL,KAAK,OACLY,eAAe,uBAGjB,4BACEG,EAAE,MACFC,GAAG,KACHC,GAAG,KACHjB,KAAK,UACLM,UAAWA,IAGb,0BACER,EAAE,KACFC,EAAE,KACFC,KAAK,OACLC,kBAAkB,SAClBC,WAAW,SACXE,SAAS,UACTzF,QAAS6E,GAERV,GAGDa,MAUNuB,EAAcvC,IAAOwC,OAAV,KAcXC,EAAkBzC,IAAO0C,IAAV,KAUfC,EAAiB3C,IAAO0C,IAAV,KASdE,EAAc,SAAC,GAAmK,IAAjKlC,EAAgK,EAAhKA,MAAOC,EAAyJ,EAAzJA,UAAWR,EAA8I,EAA9IA,MAAOS,EAAuI,EAAvIA,QAASiC,EAA8H,EAA9HA,UAAWC,EAAmH,EAAnHA,kBAAmBC,EAAgG,EAAhGA,eAAgBC,EAAgF,EAAhFA,eAAgBC,EAAgE,EAAhEA,iBAAkBpC,EAA8C,EAA9CA,iBAAkBN,EAA4B,EAA5BA,sBACzJ,OACE,kBAAC,SAAD,CACE2C,KAAM,CAAEC,QAAS,EAAGxB,UAAW,sBAC/B1D,GAAI,CAAEkF,QAAS,EAAGxB,UAAW,mBAG3B,gBAAGwB,EAAH,EAAGA,QAASxB,EAAZ,EAAYA,UAAZ,OAGE,kBAACc,EAAD,CACEtH,MAAO,CAAEgI,UAASxB,cAClB,kBAAC,EAAD,CACEjB,MAAOA,EACPC,UAAWA,EACXR,MAAOA,EACPS,QAASA,EACTC,iBAAkBA,EAClBN,sBAAuBA,IAEzB,kBAACoC,EAAD,KAEE,4BACE3G,QAAS+G,EACT7H,UAAU,2DACVC,MAAO,CAACY,MAAM,MAHhB,aAQA,kBAACwG,EAAD,CACEvG,QAAS8G,GAGPD,EAEE,yBACEhB,QAAQ,eAER,0BACEV,EAAE,KACFC,EAAE,KACFrF,MAAM,KACNqH,OAAO,KACPrB,OAAO,OACPC,YAAY,MACZX,KAAK,iBAEP,0BACEF,EAAE,KACFC,EAAE,KACFrF,MAAM,KACNqH,OAAO,KACPrB,OAAO,OACPC,YAAY,MACZX,KAAK,kBAMT,yBACEQ,QAAQ,eAER,0BACEC,EAAE,6BACFC,OAAO,OACPC,YAAY,MACZX,KAAK,mBAObwB,EACE,4BACE7G,QAASgH,EACT9H,UAAU,2DACVC,MAAO,CAACY,MAAM,MAHhB,aAUA,4BACEC,QAASiH,EACT/H,UAAU,2DACVC,MAAO,CAACY,MAAM,MAHhB,qBAqBZsH,EAAQrD,IAAO0C,IAAV,KASA,SAAArG,GAAK,OAAIA,EAAMiH,QAAU,UAAY,eAI1CC,GAAYvD,IAAOwD,GAAV,KAMTC,GAAYzD,IAAO0D,KAAV,KAQC,SAAArH,GAAK,OAAIA,EAAMsH,UAMzBC,GAAc5D,IAAOwC,OAAV,KAYjB,IAAMqB,GAAe,SAAC,GAAuC,IAArCP,EAAoC,EAApCA,QAAS9E,EAA2B,EAA3BA,KAAMsF,EAAqB,EAArBA,eAE/BC,EADYpK,OAAOoH,QAAQvC,GACJlD,KAAI,SAAA0I,GAAI,OACnC,kBAACP,GAAD,CACEhI,IAAKuI,EAAK,GACVL,OAAQK,EAAK,IAVnB,SAAoBxF,GAClB,OAAOA,GAAQ,GAAKA,EAAb,WAAwBA,GAW1ByF,CAAWD,EAAK,QAKrB,OACE,kBAACX,EAAD,CACEC,QAASA,GAET,kBAACC,GAAD,KAEIQ,GAIJ,kBAACH,GAAD,CACE5H,QAAS8H,GAET,yBACEjC,QAAQ,eAER,0BACEC,EAAE,oBACFE,YAAY,MACZD,OAAO,eACPV,KAAK,SAGP,0BACES,EAAE,qBACFE,YAAY,MACZD,OAAO,eACPV,KAAK,SAGP,0BACES,EAAE,sCACFE,YAAY,MACZD,OAAO,eACPV,KAAK,aAQX6C,GAAOlE,IAAO0C,IAAV,KASJyB,GAAQnE,IAAOwC,OAAV,KAoCL4B,GAAY,SAAC,GAEjB,IAFqC,IAAlBC,EAAiB,EAAjBA,WACbC,EAAS,GACN1J,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAC3B0J,EAAOC,KACL,kBAACJ,GAAD,CACE1I,IAAKb,EACLoB,QAASqI,GAERzJ,IAIP,OACE,kBAACsJ,GAAD,KAEII,IAOFE,GAAiBxE,IAAO0C,IAAV,KAUd+B,GAAa,SAAC,GAAmE,IAAjEpE,EAAgE,EAAhEA,MAAO7B,EAAyD,EAAzDA,KAAM6F,EAAmD,EAAnDA,WAAYP,EAAuC,EAAvCA,eAAgBY,EAAuB,EAAvBA,iBAC7D,OACE,kBAAC,SAAD,CACExB,KAAM,CAAEC,QAAS,EAAGxB,UAAW,uBAC/B1D,GAAI,CAAEkF,QAAS,EAAGxB,UAAW,mBAG3B,gBAAGwB,EAAH,EAAGA,QAASxB,EAAZ,EAAYA,UAAZ,OAEE,kBAAC6C,GAAD,CACErJ,MAAO,CAAEgI,UAASxB,cAClB,kBAAC,GAAD,CACE2B,QAA0B,IAAjBjD,EAAMhG,OACfmE,KAAMA,EACNsF,eAAgBA,IAGlB,kBAAC,GAAD,CACEO,WAAYA,IAIZhE,GACA,kBAACkC,EAAD,CAAavG,QAAS0I,GACpB,yBAAK7C,QAAQ,eACX,0BACEC,EAAE,6BACFC,OAAO,OACPC,YAAY,MACZX,KAAK,wBAoNVsD,G,kDArMb,WAAYtI,GAAQ,IAAD,8BACjB,cAAMA,IACDpD,MAAQ,CACXoH,MAAO,GACP7B,KAAM,CACJC,EAAG,EACHC,EAAG,EACHC,EAAG,GAELgC,UAAW,EACXD,MAAO,EACPP,MAAO,QACPyE,SAAS,EACT/B,WAAW,EACXjC,SAAS,GAGX,EAAKyD,WAAa,EAAKA,WAAWvH,KAAhB,gBAClB,EAAKgH,eAAiB,EAAKA,eAAehH,KAApB,gBACtB,EAAK4H,iBAAmB,EAAKA,iBAAiB5H,KAAtB,gBACxB,EAAKgG,kBAAoB,EAAKA,kBAAkBhG,KAAvB,gBACzB,EAAKkG,eAAiB,EAAKA,eAAelG,KAApB,gBACtB,EAAKiG,eAAiB,EAAKA,eAAejG,KAApB,gBACtB,EAAKmG,iBAAmB,EAAKA,iBAAiBnG,KAAtB,gBACxB,EAAK+D,iBAAmB,EAAKA,iBAAiB/D,KAAtB,gBACxB,EAAKyD,sBAAwB,EAAKA,sBAAsBzD,KAA3B,gBAzBZ,E,uDA6BRuD,GACT,IAAMwE,EAAYxE,EAAMyE,SAAS,EAAG,GAChCrG,EAAIsG,SAASF,EAAU1K,UAAU,EAAG,GAAI,IACxCuE,EAAIqG,SAASF,EAAU1K,UAAU,EAAG,GAAI,IACxCwE,EAAIoG,SAASF,EAAU1K,UAAU,IAC/BwG,EAAgB,GAAJlC,EAAS,GAAS,GAAJC,EAASC,EAEnCH,EAAO,CACXC,IACAC,IACAC,KAGFjF,KAAKH,SAAS,CACZiF,OACAmC,YACAD,MAAOC,M,iCAIAqE,GAAI,IACLC,EAAgBD,EAAEE,OAAlBD,YACF5E,EAAU3G,KAAKT,MAAfoH,MACEhG,EAAWgG,EAAXhG,OACY,MAAhB4K,GAAkC,IAAX5K,GAGvBA,EAAS,IACXgG,GAAS4E,EACTvL,KAAKH,SAAS,CACZ8G,UAEF3G,KAAKyL,WAAW9E,M,qCAKL2E,GAAI,IACX3E,EAAU3G,KAAKT,MAAfoH,MACEhG,EAAWgG,EAAXhG,OACJA,EAAS,IACXgG,EAAQA,EAAMlG,UAAU,EAAGE,EAAS,GACpCX,KAAKH,SAAS,CACZ8G,WAGJ3G,KAAKyL,WAAW9E,K,mCAIJ,IAAD,OACX3G,KAAK0L,WAAa9L,aAAY,WAAO,IAC7BqH,EAAc,EAAK1H,MAAnB0H,UACNA,GAAa,EACb,EAAKpH,SAAS,CACZoH,UAAWA,IAEK,IAAdA,GACFb,cAAc,EAAKsF,cAEpB,O,yCAKH1L,KAAKH,SAAS,CACZqL,SAAS,EACT/B,WAAW,IAEbnJ,KAAK2L,e,0CAKiB3L,KAAKT,MAAnB4J,UAEN/C,cAAcpG,KAAK0L,YAGnB1L,KAAK2L,aAEP3L,KAAKH,SAAS,CACZsJ,WAAYnJ,KAAKT,MAAM4J,c,uCAKT,IAAD,EACcnJ,KAAKT,MAA1B0H,EADO,EACPA,UAAWD,EADJ,EACIA,MACnBhH,KAAKH,SAAS,CACZoH,UAAWA,EAAY,GACvBD,MAAOA,EAAQ,O,uCAMjBZ,cAAcpG,KAAK0L,YAEnB1L,KAAKH,SAAS,CACZqL,SAAS,EACTvE,MAHY,KAKd3G,KAAKyL,WALS,M,yCAUdrF,cAAcpG,KAAK0L,YADF,IAET/E,EAAU3G,KAAKT,MAAfoH,MACR3G,KAAKyL,WAAW9E,GAChB3G,KAAKgL,qB,yCAKLhL,KAAKH,SAAS,CACZqH,SAAS,M,4CAKSoE,GACpBA,EAAEM,iBADqB,IAERnF,EAAU6E,EAAEE,OAAOK,cAAc,SAAxCvL,MACJmG,GACFzG,KAAKH,SAAS,CACZ4G,QACAS,SAAS,M,+BAKL,IAAD,EACuElH,KAAKT,MAA3EoH,EADD,EACCA,MAAO7B,EADR,EACQA,KAAMoG,EADd,EACcA,QAAS/B,EADvB,EACuBA,UAAWlC,EADlC,EACkCA,UAAWD,EAD7C,EAC6CA,MAAOP,EADpD,EACoDA,MAAOS,EAD3D,EAC2DA,QAElE,OACE,yBAAK9E,GAAG,SAGJ8I,EACE,kBAAE,EAAF,CACElE,MAAOA,EACPC,UAAWA,EACXR,MAAOA,EACP0C,UAAWA,EACXjC,QAASA,EACTkC,kBAAmBpJ,KAAKoJ,kBACxBC,eAAgBrJ,KAAKqJ,eACrBC,eAAgBtJ,KAAKsJ,eACrBC,iBAAkBvJ,KAAKuJ,iBACvBpC,iBAAkBnH,KAAKmH,iBACvBN,sBAAuB7G,KAAK6G,wBAG9B,kBAAC,GAAD,CACEF,MAAOA,EACP7B,KAAMA,EACN6F,WAAY3K,KAAK2K,WACjBP,eAAgBpK,KAAKoK,eACrBY,iBAAkBhL,KAAKgL,wB,GA9LjBvI,aCtcLqJ,G,kDAzDb,WAAYnJ,GAAQ,IAAD,8BACjB,cAAMA,IACDpD,MAAQ,CACTwM,YAAY,GAEhB,EAAKC,WAAa,EAAKA,WAAW5I,KAAhB,gBALD,E,yDASfpD,KAAKH,SAAS,CAAEkM,YAAa/L,KAAKT,MAAMwM,e,+BAG1C,OACE,6BACE,yBAAKvK,UAAW,cAAgBxB,KAAKT,MAAMwM,WAAa,gBAAkB,WAAY3J,GAAG,sBAAsB6J,SAAS,KAAKC,KAAK,SAASC,kBAAgB,eAC3JC,cAAY,QACV,yBAAK5K,UAAU,0CAA0C0K,KAAK,YAE5D,yBAAK1K,UAAU,iBAEb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,gBAAb,yBAEA,4BAAQU,KAAK,SAASmK,MAAM,QAAQC,eAAa,QAAQ1H,aAAW,QAAQtC,QAAStC,KAAKgM,YACxF,0BAAMI,cAAY,OAAOC,MAAM,cAA/B,UAIJ,yBAAK7K,UAAU,cACb,yBAAKA,UAAU,eACb,yBAAK+K,IAAI,+DACT,oJACA,2KAIJ,yBAAK/K,UAAU,uCACb,uBAAGU,KAAK,SAASV,UAAU,uCAAuC8K,eAAa,QAAQhK,QAAStC,KAAKgM,YAArG,YAOR,yBAAK5J,GAAG,OACN,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOoK,OAAK,EAACC,KAAO,IAAIC,UAAapN,IAErC,kBAAC,IAAD,CAAOkN,OAAK,EAACC,KAAO,SAASC,UAAazB,KAC1C,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAO,aAAaC,UAAajH,U,GAlDtCjD,IAAMC,WCAJkK,QACW,cAA7BhN,OAAOiN,SAASC,UAEe,UAA7BlN,OAAOiN,SAASC,UAEhBlN,OAAOiN,SAASC,SAASC,MACvB,2D,wBCJNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEF5M,SAASC,eAAe,SDiHpB,kBAAmB4M,WACrBA,UAAUC,cAAcC,MACrB3J,MAAK,SAAA4J,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e48e22b9.chunk.js","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport 'moment-timezone';\nimport './worldclock.scss';\n\nvar cityTimezones = require('city-timezones');\n\nexport default class WeatherApp extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        currentTime: moment(),\n        cities: {}\n      }\n    }\n    componentDidMount() {\n      window.setInterval(() => this.setState({ currentTime: moment() }), 5000)\n    }\n    myFunction (name,timezone) {\n        this.setState({cities: Object.assign(this.state.cities, {[name]: timezone})\n        });\n    }\n\n    getInputValue(){\n      let inputVal = document.getElementById(\"myInput\").value;\n      if (inputVal.indexOf(',') === -1) {\n        alert('Please separate the name of the city and the country code with a comma! e.g., San Francisco, US')\n        return;\n      }\n      let str1 = inputVal.substring(0, inputVal.indexOf(','));\n      let str2 = inputVal.substring(inputVal.indexOf(',')+1, inputVal.length);\n      str1 = str1.trim();\n      str2 = str2.replace(/\\s/g,'');\n      str2 = str2.toUpperCase();\n      const cityLookup = cityTimezones.lookupViaCity(str1);\n      if (cityLookup.length  === 0) {\n        alert('Please enter a valid city!');\n        return;\n      }\n      let inputTimezone;\n      for (let i = 0; i < cityLookup.length; i++) {\n        let country = cityLookup[i].country;\n        country = country.replace(/\\s/g,'');\n        country = country.toUpperCase();\n        if (cityLookup[i].iso2 === str2 || cityLookup[i].iso3 === str2 || country === str2) {\n          inputTimezone = cityLookup[i].timezone;;\n        }\n      }\n      if (!inputTimezone) {\n        alert('Please enter a valid country code! e.g., US or USA');\n        return;\n      }\n      this.myFunction(str1,inputTimezone);\n    }\n\n    render() {\n      const { cities, currentTime } = this.state;\n      return (\n        <div>\n        <div className=\"panels\" style={{position: \"relative\"}}>\n          {\n            Object\n              .keys(cities)\n              .map(cityName =>\n                   <City name= {cityName}\n                         timeZone = {cities[cityName]}\n                         currentTime = {currentTime}\n                         key={cityName}\n                   />)\n          }\n        </div>  \n        <div className=\"form-inline md-form mr-auto mb-4\" style={{position: \"absolute\", bottom: 40, right:60}}>\n        <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Enter City, Country Code e.g. New York, US\" id=\"myInput\" style={{width: 300}}/>\n        <button className=\"btn purple-gradient btn-sm my-0 waves-effect waves-light\" type=\"submit\" onClick={() => this.getInputValue()} >Add City</button>\n      </div> \n      </div>\n      )\n      \n    }\n  }\n  \n  class City extends React.Component {\n    constructor(props) {\n      super(props);\n      const { timeZone, currentTime } = this.props;\n      this.state = {\n              weatherData: {},\n              localTime: currentTime.tz(timeZone).format('HH:mm dddd'),\n              currentHour: currentTime.tz(timeZone).format('HH'),\n              open: false,\n              bgGradient: ''\n      }\n      this.getWeatherInfo = this.getWeatherInfo.bind(this);\n      this.updateCurrentTime = this.updateCurrentTime.bind(this);\n      this.toggleOpen = this.toggleOpen.bind(this);\n    };\n    async getWeatherInfo(id) {\n      const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${id}&units=metric&appid=f641c437ce774025fb4d9ae68b01b5a5`).then(res => res.json());\n      const weatherInfo = {\n        temp: res.main.temp,\n        desc: res.weather[0].main,\n        icon: `icon-${res.weather[0].icon}`\n      };\n      this.setState({\n        weatherData: weatherInfo\n      })\n    }\n    setGradient(currentHour) {\n        if (currentHour < 3) {\n          this.setState({ bgGradient : 'night-2'});\n        } else if (currentHour < 6) {\n          this.setState({ bgGradient : 'dawn'});\n        } else if (currentHour < 9) {\n          this.setState({ bgGradient : 'morning'});\n        } else if (currentHour < 12) {\n          this.setState({ bgGradient : 'afternoon-1'});\n        } else if (currentHour < 15) {\n          this.setState({ bgGradient : 'afternoon-2'});\n        } else if (currentHour < 18) {\n          this.setState({ bgGradient : 'evening-1'});\n        } else if (currentHour < 21) {\n          this.setState({ bgGradient : 'evening-2'});\n        } else if (currentHour < 24) {\n          this.setState({ bgGradient : 'night-1'});\n        }\n    }\n    updateCurrentTime() {\n      const { timeZone, currentTime } = this.props;\n      this.setState({ localTime: currentTime.tz(timeZone).format('dddd HH:mm') });\n      this.setGradient(this.state.currentHour);\n    }\n    componentDidMount() {\n      const { name } = this.props;\n      this.getWeatherInfo(name);\n      window.setInterval(() => this.updateCurrentTime(), 5000);\n      this.setGradient(this.state.currentHour);\n    }\n    toggleOpen() {\n      const currentState = this.state.open;\n      this.setState({ open: !currentState });\n    }\n    render() {\n      const { name, bgImg } = this.props;\n      const { localTime } = this.state;\n      const { desc, temp, icon } = this.state.weatherData;\n      const activeClass = this.state.open ? 'open': '';\n      const gradientClass = this.state.bgGradient;\n      return (\n        <div className={`panel ${activeClass} ${gradientClass}`}\n             onClick={this.toggleOpen}\n          >\n          <div>\n            <h2>{ name }</h2>\n            <p>{ localTime }</p>\n          </div>\n            <div className=\"weather-icon\">\n              <i className={icon}></i>\n          {temp ?\n              <span> { desc } { temp }°C </span>\n              : ''\n          }\n            </div>\n        </div>\n      )\n    }\n  }\n\n\n\n\n  \n\n\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction NavBar() {\n    return (\n\n      <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark scrolling-navbar\">\n\n\n        <div className=\"container\">\n        \n        \n            <Link to=\"/\" className=\"navbar-brand\">\n                <strong>World Clock</strong>\n            </Link>\n        \n        \n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n                aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n        \n        \n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        \n                \n                <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item\">  \n                    <Link to=\"/\" className=\"nav-link\" >Time\n                    </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/stopwatch\" className=\"nav-link\" >Stopwatch</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/timer\" className=\"nav-link\" >Timer</Link>\n                </li>\n                </ul>\n        \n        \n            </div>\n        \n        \n        </div>\n        \n      \n      </nav>\n            \n    );\n}\n\nexport default NavBar;","import React, {useState} from 'react';\nimport './stopwatch.scss';\n\nfunction Stopwatch() {\n  const [time, setTime] = useState({ms:0, s:0, m:0, h:0});\n  const [interv, setInterv] = useState();\n  const [status, setStatus] = useState(0);\n\n  const start = () => {\n    run();\n    setStatus(1);\n    setInterv(setInterval(run, 10));\n  };\n\n  var updatedMs = time.ms, updatedS = time.s, updatedM = time.m, updatedH = time.h;\n\n  const run = () => {\n    if(updatedM === 60){\n      updatedH++;\n      updatedM = 0;\n    }\n    if(updatedS === 60){\n      updatedM++;\n      updatedS = 0;\n    }\n    if(updatedMs === 100){\n      updatedS++;\n      updatedMs = 0;\n    }\n    updatedMs++;\n    return setTime({ms:updatedMs-1, s:updatedS, m:updatedM, h:updatedH});\n  };\n\n  const stop = () => {\n    clearInterval(interv);\n    setStatus(2);\n  };\n\n  const reset = () => {\n    clearInterval(interv);\n    setStatus(0);\n    setTime({ms:0, s:0, m:0, h:0})\n  };\n\n  const resume = () => start();\n\n\n  return (\n    <div className=\"main-section\">\n     <div className=\"clock-holder\">\n          <div className=\"stopwatch\">\n               <DisplayComponent time={time}/>\n               <BtnComponent status={status} resume={resume} reset={reset} stop={stop} start={start}/>\n          </div>\n     </div>\n    </div>\n  );\n}\n\nfunction DisplayComponent(props) {\n    const h = () => {\n       if(props.time.h === 0){\n         return '';\n       }else {\n         return <span>{(props.time.h >= 10)? props.time.h : \"0\"+ props.time.h}</span>;\n       }\n    }\n    return (\n      <div>\n         {h()}&nbsp;&nbsp;\n         <span>{(props.time.m >= 10)? props.time.m : \"0\"+ props.time.m}</span>&nbsp;:&nbsp;\n         <span>{(props.time.s >= 10)? props.time.s : \"0\"+ props.time.s}</span>&nbsp;:&nbsp;\n         <span>{(props.time.ms >= 10)? props.time.ms : \"0\"+ props.time.ms}</span>\n      </div>\n    );\n  }\n\n  function BtnComponent(props) {\n    return (\n      <div>\n        {(props.status === 0)? \n          <button className=\"btn purple-gradient btn-sm my-0 waves-effect waves-light\"\n          style={{width:100}}\n          onClick={props.start}>Start</button> : \"\"\n        }\n  \n        {(props.status === 1)? \n          <div>\n            <button className=\"btn purple-gradient btn-sm my-0 waves-effect waves-light\"\n                    style={{width:100}}\n                    onClick={props.stop}>Stop</button>\n            <button className=\"btn purple-gradient btn-sm my-0 waves-effect waves-light\"\n                    style={{width:100}}\n                    onClick={props.reset}>Reset</button>\n          </div> : \"\"\n        }\n  \n       {(props.status === 2)? \n          <div>\n            <button className=\"btn purple-gradient btn-sm my-0 waves-effect waves-light\"\n                    style={{width:100}}\n                    onClick={props.resume}>Resume</button>\n            <button className=\"btn purple-gradient btn-sm my-0 waves-effect waves-light\"\n                    style={{width:100}}\n                    onClick={props.reset}>Reset</button>\n          </div> : \"\"\n        }\n       \n      </div>\n    );\n  }\n\nexport default Stopwatch;","\nimport React, {Component} from 'react';\nimport styled from \"styled-components\";\nimport { Spring } from 'react-spring/renderprops';\n\nimport './timer.scss';\n\nconst Label = styled.form`\n  position: absolute;\n  left: 50%;\n  top: 25%;\n  transform: translate(-50%, -50%);\n  padding: 1.2rem 0.8rem;\n  box-shadow: 0 0 0 2px #a86989;\n  background: #03031b;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  line-height: 2;\n`;\n\nconst LabelText = styled.label`\n  color: #fff;\n  font-size: 0.7rem;\n  margin: 0.25rem 0;\n`;\n\nconst LabelInput = styled.input`\n  background: none;\n  border: none;\n  border-left: 2px solid #a86989;\n  border-radius: 1px;\n  font-family: inherit;\n  font-size: 0.9rem;\n  font-weight: 300;\n  padding: 0.25rem 0.75rem;\n  color: #fff;\n`;\n\nconst OutputLabel = ({ label, handleTimerLabelInput }) => {\n  return (\n    <Label\n      onSubmit={handleTimerLabelInput}>\n      <LabelText>Timer's Label</LabelText>\n      <LabelInput\n        type=\"text\"\n        placeholder={label}\n      />\n    </Label>\n  )\n};\n\nconst OutputDisplay = ({ total, timeTotal, label, isLabel, handleTimerLabel, handleTimerLabelInput }) => {\n  let s = timeTotal;\n  let m = 0;\n  let h = 0;\n  while (s >= 60) {\n    s -= 60;\n    m += 1;\n  }\n\n  while (m >= 60) {\n    m -= 60;\n    h += 1;\n  }\n  const time = {};\n  if (total >= 3600) {\n    time.h = h;\n  }\n  if (total >= 60) {\n    time.m = m;\n  }\n\n  time.s = s;\n\n  const timeValues = Object.entries(time);\n  const Text = timeValues.map((entry, index) => {\n    const position = 90 / (timeValues.length + 1) * (index + 1);\n    return ((\n      <text\n        x={position}\n        y=\"50\"\n        fill=\"#a86989\"\n        alignmentBaseline=\"middle\"\n        textAnchor=\"middle\"\n        key={entry[0]}\n        fontWeight=\"bold\"\n        fontSize=\"1rem\"\n      >\n        {entry[1]}\n        <tspan\n          fontSize=\"0.35rem\"\n          alignmentBaseline=\"hanging\"\n        >\n          {entry[0]}\n        </tspan>\n      </text>\n    ));\n  })\n\n\n  const perimeter = 43 * 2 * 3.14;\n  const progress = (1 - timeTotal / total);\n  const transform = `rotate(-${progress * 360}) translate(0 -43) rotate(${progress * 360})`;\n\n\n  return (\n    <React.Fragment>\n      {\n        isLabel &&\n        <OutputLabel\n          label={label}\n          handleTimerLabelInput={handleTimerLabelInput} />\n\n      }\n      <svg viewBox=\"0 0 100 100\" width=\"70%\">\n        <g transform=\"translate(5 5)\">\n          <path\n            d=\"M 45 2 a 43 43 0 0 0 0 86 a 43 43 0 0 0 0 -86\"\n            stroke=\"#fff\"\n            strokeWidth=\"2\"\n            fill=\"none\"\n            shapeRendering=\"geometricPrecision\"\n          />\n\n          <path\n            d=\"M 45 2 a 43 43 0 0 0 0 86 a 43 43 0 0 0 0 -86\"\n            stroke=\"#a86989\"\n            strokeWidth=\"2\"\n            strokeDasharray={perimeter}\n            strokeDashoffset={perimeter - (perimeter * progress)}\n            fill=\"none\"\n            shapeRendering=\"geometricPrecision\"\n          />\n\n          <circle\n            r=\"3.2\"\n            cx=\"45\"\n            cy=\"45\"\n            fill=\"#a86989\"\n            transform={transform}\n          />\n\n          <text\n            x=\"45\"\n            y=\"30\"\n            fill=\"#fff\"\n            alignmentBaseline=\"middle\"\n            textAnchor=\"middle\"\n            fontSize=\"0.35rem\"\n            onClick={handleTimerLabel}\n          >\n            {label}\n          </text>\n          {\n            Text\n          }\n        </g>\n\n      </svg>\n    </React.Fragment>\n  )\n};\n\n\nconst TimerButton = styled.button`\n  width: 52px;\n  height: 52px;\n  border-radius: 50%;\n  padding: 0.6rem;\n  color: #FFC900;\n  background: #FFC900;\n  box-shadow: 0 1px 5px -2px #FFC900;\n  &:hover {\n    transition: box-shadow 0.2s ease-out;\n    box-shadow: 0 1px 5px 0px #FFC900;\n  }\n`;\n\nconst OutputContainer = styled.div`\n  max-width: 380px;\n  width: 90vw;\n  margin: 2rem auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1rem;\n`;\n\nconst OutputControls = styled.div`\n  margin-top: 3rem;\n  display: grid;\n  grid-column-gap: 2rem;\n  grid-template-columns: repeat(3, 80px);\n  align-items: center;\n  justify-items: center;\n`;\n\nconst TimerOutput = ({ total, timeTotal, label, isLabel, isPlaying, handleTimerToggle, handleTimerNew, handleTimerAdd, handleTimerReset, handleTimerLabel, handleTimerLabelInput }) => {\n  return (\n    <Spring\n      from={{ opacity: 0, transform: 'translateY(2.5rem)' }}\n      to={{ opacity: 1, transform: 'translateY(0)' }}\n    >\n      {\n        ({ opacity, transform }) => (\n\n\n          <OutputContainer\n            style={{ opacity, transform }}>\n            <OutputDisplay\n              total={total}\n              timeTotal={timeTotal}\n              label={label}\n              isLabel={isLabel}\n              handleTimerLabel={handleTimerLabel}\n              handleTimerLabelInput={handleTimerLabelInput}\n            />\n            <OutputControls>\n\n              <button\n                onClick={handleTimerNew}\n                className=\"btn purple-gradient btn-sm my-0 waves-effect waves-light\"\n                style={{width:120}}\n              >\n                New Timer\n              </button>\n\n              <TimerButton\n                onClick={handleTimerToggle}\n              >\n                {\n                  isPlaying ?\n\n                    <svg\n                      viewBox=\"0 0 100 100\"\n                    >\n                      <rect\n                        x=\"30\"\n                        y=\"30\"\n                        width=\"10\"\n                        height=\"40\"\n                        stroke=\"#eee\"\n                        strokeWidth=\"6px\"\n                        fill=\"currentColor\"\n                      />\n                      <rect\n                        x=\"60\"\n                        y=\"30\"\n                        width=\"10\"\n                        height=\"40\"\n                        stroke=\"#eee\"\n                        strokeWidth=\"6px\"\n                        fill=\"currentColor\"\n                      />\n                    </svg>\n\n                    :\n\n                    <svg\n                      viewBox=\"0 0 100 100\"\n                    >\n                      <path\n                        d=\"M 40 30 l 30 20 l -30 20 Z\"\n                        stroke=\"#eee\"\n                        strokeWidth=\"7px\"\n                        fill=\"currentColor\"\n                      />\n                    </svg>\n                }\n              </TimerButton>\n\n              {\n                isPlaying ?\n                  <button\n                    onClick={handleTimerAdd}\n                    className=\"btn purple-gradient btn-sm my-0 waves-effect waves-light\"\n                    style={{width:120}}\n                  >\n                    Add +1:00\n            </button>\n\n                  :\n\n                  <button\n                    onClick={handleTimerReset}\n                    className=\"btn purple-gradient btn-sm my-0 waves-effect waves-light\"\n                    style={{width:120}}\n                  >\n                    Reset Timer\n            </button>\n\n              }\n\n            </OutputControls>\n\n          </OutputContainer>\n        )\n      }\n\n    </Spring>\n  );\n};\n\n\nconst Input = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  padding: 0.5rem 0.75rem;\n  margin-bottom: 1rem;\n  border-bottom: 2px solid #ffffff11;\n  transition: color 0.2s ease-out;\n//   style the color of the text (and the svg element through the currentColor property) based on the props boolean\n  color: ${props => props.isInput ? '#ffffff' : '#ffffff55'};\n`;\n\n\nconst InputTime = styled.h2`\n  flex-grow: 1;\n  display: flex;\n  font-size: 2rem;\n  font-weight: 500;\n`;\nconst InputSpan = styled.span`\n  flex-grow: 1;\n  width: 0;\n  margin: 0 0.75rem;\n  position: relative;\n\n  // add the short label for hours, minutes, seconds by accessing the suffix argument passed through props\n  &:after {\n    content: '${props => props.suffix}';\n    font-size: 0.8rem;\n    margin-left: 0.15rem;\n  }\n`;\n\nconst InputButton = styled.button`\n  width: 70px;\n  height: 50px;\n  padding: 0.3rem;\n`;\n\n\nfunction formatTime(time) {\n  return time >= 10 ? time : `0${time}`;\n}\n\n\nconst InputDisplay = ({ isInput, time, handleDialBack }) => {\n  const InputPair = Object.entries(time);\n  const InputSpans = InputPair.map(pair => (\n    <InputSpan\n      key={pair[0]}\n      suffix={pair[0]}\n    >\n      {formatTime(pair[1])}\n    </InputSpan>\n  )\n  );\n\n  return (\n    <Input\n      isInput={isInput}\n    >\n      <InputTime>\n        {\n          InputSpans\n        }\n      </InputTime>\n      \n      <InputButton\n        onClick={handleDialBack}\n      >\n        <svg\n          viewBox=\"0 0 100 100\"\n        >\n          <path\n            d=\"M 50 37.5 l 25 25\"\n            strokeWidth=\"5px\"\n            stroke=\"currentColor\"\n            fill=\"none\"\n          />\n\n          <path\n            d=\"M 50 62.5 l 25 -25\"\n            strokeWidth=\"5px\"\n            stroke=\"currentColor\"\n            fill=\"none\"\n          />\n\n          <path\n            d=\"M 40 20 h 50 v 60 h -50 l -20 -30 Z\"\n            strokeWidth=\"5px\"\n            stroke=\"currentColor\"\n            fill=\"none\" />\n        </svg>\n      </InputButton>\n    </Input>\n  )\n};\n\n\nconst Dial = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  width: 85%;\n  grid-gap: 1.8rem 1rem;\n\tmargin-bottom: 1.25rem;\n`;\n\n\nconst Digit = styled.button`\n  font-size: 2rem;\n  transition: all 0.2s ease-out;\n  font-weight: 600;\n  position: relative;\n  color: #ffffff55;\n\t// for the focus and active state substitute the default outline highlighting the button through a fully opaque color and a pseudo element\n\toutline: none;\n  // push the first digit, 0, to the very bottom of the timer\n  &:nth-of-type(1) {\n    grid-row: 4/5;\n    grid-column: 1/-1;\n  }\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 50px;\n    height: 50px;\n    transform:  translate(-50%, -50%) scale(0);\n    background: #fff;\n    border-radius: 50%;\n  }\n  &:hover, &:focus {\n    color: #fff;\n  }\n  &:hover:before, &:focus:before {\n    transition: all 0.2s ease-out;\n    // transition occurring only as the mouse hovers in the element\n    transition-delay: 0.1s;\n    transform:  translate(-50%, -50%) scale(1);\n    opacity: 0;\n  }\n`;\n\nconst InputDial = ({ handleDial }) => {\n  const Digits = [];\n  for (let i = 0; i < 10; i += 1) {\n    Digits.push(\n      <Digit\n        key={i}\n        onClick={handleDial}\n      >\n        {i}\n      </Digit>\n    );\n  }\n  return (\n    <Dial>\n      {\n        Digits\n      }\n    </Dial>\n  )\n};\n\n\nconst InputContainer = styled.div`\n  max-width: 380px;\n  width: 90vw;\n  margin: 2rem auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1rem;\n`;\n\nconst TimerInput = ({ input, time, handleDial, handleDialBack, handleTimerStart }) => {\n  return (\n    <Spring\n      from={{ opacity: 0, transform: 'translateY(-2.5rem)' }}\n      to={{ opacity: 1, transform: 'translateY(0)' }}\n    >\n      {\n        ({ opacity, transform }) => (\n\n          <InputContainer\n            style={{ opacity, transform }}>\n            <InputDisplay\n              isInput={input.length !== 0}\n              time={time}\n              handleDialBack={handleDialBack}\n            />\n\n            <InputDial\n              handleDial={handleDial}\n            />\n\n            {\n              input &&\n              <TimerButton onClick={handleTimerStart}>\n                <svg viewBox=\"0 0 100 100\">\n                  <path\n                    d=\"M 40 30 l 30 20 l -30 20 Z\"\n                    stroke=\"#eee\"\n                    strokeWidth=\"7px\"\n                    fill=\"currentColor\"\n                  />\n                </svg>\n              </TimerButton>\n\n            }\n          </InputContainer>\n        )\n      }\n    </Spring >\n  )\n};\n\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      time: {\n        h: 0,\n        m: 0,\n        s: 0\n      },\n      timeTotal: 0,\n      total: 0,\n      label: 'Label',\n      isTimer: false,\n      isPlaying: false,\n      isLabel: false\n    };\n\n    this.handleDial = this.handleDial.bind(this);\n    this.handleDialBack = this.handleDialBack.bind(this);\n    this.handleTimerStart = this.handleTimerStart.bind(this);\n    this.handleTimerToggle = this.handleTimerToggle.bind(this);\n    this.handleTimerAdd = this.handleTimerAdd.bind(this);\n    this.handleTimerNew = this.handleTimerNew.bind(this);\n    this.handleTimerReset = this.handleTimerReset.bind(this);\n    this.handleTimerLabel = this.handleTimerLabel.bind(this);\n    this.handleTimerLabelInput = this.handleTimerLabelInput.bind(this);\n  }\n\n\n  updateTime(input) {\n    const inputTime = input.padStart(6, 0);\n    let h = parseInt(inputTime.substring(0, 2), 10);\n    let m = parseInt(inputTime.substring(2, 4), 10);\n    let s = parseInt(inputTime.substring(4));\n    const timeTotal = h * 60 * 60 + m * 60 + s;\n\n    const time = {\n      h,\n      m,\n      s\n    };\n\n    this.setState({\n      time,\n      timeTotal,\n      total: timeTotal\n    })\n  }\n\n  handleDial(e) {\n    const { textContent } = e.target;\n    let { input } = this.state;\n    const { length } = input;\n    if (textContent === '0' && length === 0) {\n      return;\n    }\n    if (length < 6) {\n      input += textContent;\n      this.setState({\n        input\n      })\n      this.updateTime(input);\n    }\n  }\n\n\n  handleDialBack(e) {\n    let { input } = this.state;\n    const { length } = input;\n    if (length > 0) {\n      input = input.substring(0, length - 1);\n      this.setState({\n        input\n      })\n    }\n    this.updateTime(input);\n  }\n\n\n  startTimer() {\n    this.intervalID = setInterval(() => {\n      let { timeTotal } = this.state;\n      timeTotal -= 1;\n      this.setState({\n        timeTotal: timeTotal\n      })\n      if (timeTotal === 0) {\n        clearInterval(this.intervalID);\n      }\n    }, 1000);\n  }\n\n\n  handleTimerStart() {\n    this.setState({\n      isTimer: true,\n      isPlaying: true\n    })\n    this.startTimer();\n  }\n\n\n  handleTimerToggle() {\n    const { isPlaying } = this.state;\n    if (isPlaying) {\n      clearInterval(this.intervalID);\n    }\n    else {\n      this.startTimer();\n    }\n    this.setState({\n      isPlaying: !this.state.isPlaying\n    })\n  }\n\n\n  handleTimerAdd() {\n    const { timeTotal, total } = this.state;\n    this.setState({\n      timeTotal: timeTotal + 60,\n      total: total + 60\n    })\n  }\n\n\n  handleTimerNew() {\n    clearInterval(this.intervalID);\n    const input = '';\n    this.setState({\n      isTimer: false,\n      input\n    })\n    this.updateTime(input)\n  }\n\n\n  handleTimerReset() {\n    clearInterval(this.intervalID);\n    const { input } = this.state;\n    this.updateTime(input);\n    this.handleTimerStart();\n  }\n\n\n  handleTimerLabel() {\n    this.setState({\n      isLabel: true\n    })\n  }\n\n\n  handleTimerLabelInput(e) {\n    e.preventDefault();\n    const { value: label } = e.target.querySelector('input');\n    if (label) {\n      this.setState({\n        label,\n        isLabel: false\n      })\n    }\n  }\n\n  render() {\n    const { input, time, isTimer, isPlaying, timeTotal, total, label, isLabel } = this.state;\n\n    return (\n      <div id=\"timer\">\n\n        {\n          isTimer ?\n            < TimerOutput\n              total={total}\n              timeTotal={timeTotal}\n              label={label}\n              isPlaying={isPlaying}\n              isLabel={isLabel}\n              handleTimerToggle={this.handleTimerToggle}\n              handleTimerNew={this.handleTimerNew}\n              handleTimerAdd={this.handleTimerAdd}\n              handleTimerReset={this.handleTimerReset}\n              handleTimerLabel={this.handleTimerLabel}\n              handleTimerLabelInput={this.handleTimerLabelInput}\n            />\n            :\n            <TimerInput\n              input={input}\n              time={time}\n              handleDial={this.handleDial}\n              handleDialBack={this.handleDialBack}\n              handleTimerStart={this.handleTimerStart}\n            />\n        }\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React from 'react';\nimport './App.css';\nimport { Route,Link } from \"react-router-dom\";\n\n// pages\nimport WeatherApp from './pages/worldclock/worldclock';\nimport NavBar from './pages/navbar/navbar';\nimport Stopwatch from './pages/stopwatch/stopwatch';\nimport Timer from './pages/timer/timer';\n\n\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n        modalState: true\n    };\n    this.handleShow = this.handleShow.bind(this);\n  }\n\n  handleShow() {\n      this.setState({ modalState: !this.state.modalState });\n  }\n  render() {\n    return (\n      <div>\n        <div className={\"modal fade\" + (this.state.modalState ? \" show d-block\" : \" d-none\")} id=\"centralModalWarning\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\n        aria-hidden=\"true\">\n          <div className=\"modal-dialog modal-notify modal-warning\" role=\"document\">\n     \n            <div className=\"modal-content\" >\n       \n              <div className=\"modal-header\">\n                <p className=\"heading lead\">Meet the World Clock!</p>\n\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={this.handleShow}>\n                  <span aria-hidden=\"true\" class=\"white-text\">&times;</span>\n                </button>\n              </div>\n       \n              <div className=\"modal-body\">\n                <div className=\"text-center\">\n                  <img src=\"https://media.giphy.com/media/5trWFgPM0fKYTj5XrH/giphy.gif\"></img>\n                  <p>At its core, this clock application lets you add multiple cities to keep track of time, day of the week, and weather.</p>\n                  <p>Search cities using the format name, country code, e.g., San Francisco, US. Click the Add City button to add the city to your home screen.</p>\n                </div>\n              </div>\n       \n              <div className=\"modal-footer justify-content-center\">\n                <a type=\"button\" className=\"btn btn-outline-warning waves-effect\" data-dismiss=\"modal\" onClick={this.handleShow}>Skip</a>\n              </div>\n            </div>\n     \n          </div>\n        </div>\n      \n        <div id=\"app\">\n          <NavBar/>\n          <Route exact path = \"/\" component = {WeatherApp}/>\n          {/* <Route exact path = \"/alarm\" component = {Alarm}/> */}\n          <Route exact path = \"/timer\" component = {Timer}/>\n          <Route exact path = \"/stopwatch\" component = {Stopwatch}/>   \n        </div>\n      </div>\n    \n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport './assets/css/bootstrap.min.css';\nimport './assets/css/style.min.css';\nimport './assets/css/mdb.min.css';\nimport './assets/weather-icons-master/sass/weather-icons.min.scss';\nimport { BrowserRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}